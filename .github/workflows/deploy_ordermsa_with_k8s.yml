name: deploy order order-backend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout github
        uses: actions/checkout@v2

      - name: install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.9"
        id: install

      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ap-northeast-2

      - name: update cluster information
        run: aws eks update-kubeconfig --name 1team-cluster --region ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 1. Member 서비스
      - name: member build and push docker image to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: bradko-msa-member
          IMAGE_TAG: latest
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
            -f ./5.msa/member/Dockerfile ./5.msa/member
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply for member
        run: |
          kubectl apply -f ./5.msa/member/k8s/depl_svc.yml
          kubectl rollout restart deployment bradko-msa-member-depl -n bradko

      # 2. Order 서비스
      - name: order build and push docker image to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: bradko-msa-ordering
          IMAGE_TAG: latest
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
            -f ./5.msa/ordering/Dockerfile ./5.msa/ordering
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply for order
        run: |
          kubectl apply -f ./5.msa/ordering/k8s/depl_svc.yml
          kubectl rollout restart deployment bradko-msa-ordering-depl -n bradko

      # 3. Product 서비스
      - name: product build and push docker image to ecr
        env:
          REGISTRY: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: bradko-msa-product
          IMAGE_TAG: latest
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
            -f ./5.msa/product/Dockerfile ./5.msa/product
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply for product
        run: |
          kubectl apply -f ./5.msa/product/k8s/depl_svc.yml
          kubectl rollout restart deployment bradko-msa-product-depl -n bradko
